{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Documents\\\\DH\\\\Bimestre_3\\\\Front3\\\\fe3-final\\\\fe3-final\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContextGlobal = /*#__PURE__*/createContext();\nconst themes = {\n  dark: {\n    theme: true,\n    bgColor: 'black',\n    color: 'white'\n  },\n  light: {\n    theme: false,\n    bgColor: 'white',\n    color: 'black'\n  }\n}; // const initialState = []\n\nconst intialThemeState = themes.light; // export const initialState = \n// {\n//   theme: \"\",\n//   data: []\n//   }\n\nconst themeReducer = (state, action) => {\n  switch (action.type) {\n    case 'DARK':\n      return themes.dark;\n\n    case 'LIGTH':\n      return themes.light;\n\n    default:\n      throw new Error();\n  }\n};\n\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [themeState, themeDispatch] = useReducer(themeReducer, intialThemeState); //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: {\n      themeState,\n      themeDispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"d44QC4hx9QFUDMveDYw5E+9OM2w=\");\n\n_c = ContextProvider;\nexport default ContextProvider;\nexport const useContextGlobal = () => {\n  _s2();\n\n  return useContext(ContextGlobal);\n};\n\n_s2(useContextGlobal, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useContext","useReducer","ContextGlobal","themes","dark","theme","bgColor","color","light","intialThemeState","themeReducer","state","action","type","Error","ContextProvider","children","themeState","themeDispatch","useContextGlobal"],"sources":["C:/Users/Lenovo/Documents/DH/Bimestre_3/Front3/fe3-final/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const ContextGlobal = createContext();\r\n\r\n\r\nconst themes = {\r\n  dark: {\r\n      theme: true,\r\n      bgColor: 'black',\r\n      color: 'white'\r\n  },\r\n  light: {\r\n      theme: false,\r\n      bgColor: 'white',\r\n      color: 'black'\r\n  }\r\n}\r\n\r\n// const initialState = []\r\nconst intialThemeState = themes.light\r\n\r\n\r\n// export const initialState = \r\n// {\r\n//   theme: \"\",\r\n//   data: []\r\n//   }\r\n\r\n\r\n\r\nconst themeReducer = (state,action) => {\r\n    switch (action.type){\r\n      case 'DARK': \r\n        return themes.dark\r\n      case 'LIGTH':\r\n          return themes.light\r\n\r\n      default: \r\n        throw new Error\r\n\r\n    }\r\n}\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n\r\n  const [themeState, themeDispatch] = useReducer(themeReducer, intialThemeState)\r\n\r\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\r\n\r\n  return (\r\n    <ContextGlobal.Provider value={{themeState, themeDispatch}}>\r\n      {children}\r\n    </ContextGlobal.Provider>\r\n  );\r\n};\r\n\r\nexport default ContextProvider\r\nexport const useContextGlobal = () => useContext(ContextGlobal)\r\n"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,UAApC,QAAsD,OAAtD;;AAEA,OAAO,MAAMC,aAAa,gBAAGH,aAAa,EAAnC;AAGP,MAAMI,MAAM,GAAG;EACbC,IAAI,EAAE;IACFC,KAAK,EAAE,IADL;IAEFC,OAAO,EAAE,OAFP;IAGFC,KAAK,EAAE;EAHL,CADO;EAMbC,KAAK,EAAE;IACHH,KAAK,EAAE,KADJ;IAEHC,OAAO,EAAE,OAFN;IAGHC,KAAK,EAAE;EAHJ;AANM,CAAf,C,CAaA;;AACA,MAAME,gBAAgB,GAAGN,MAAM,CAACK,KAAhC,C,CAGA;AACA;AACA;AACA;AACA;;AAIA,MAAME,YAAY,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAkB;EACnC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,MAAL;MACE,OAAOV,MAAM,CAACC,IAAd;;IACF,KAAK,OAAL;MACI,OAAOD,MAAM,CAACK,KAAd;;IAEJ;MACE,MAAM,IAAIM,KAAJ,EAAN;EAPJ;AAUH,CAXD;;AAaA,OAAO,MAAMC,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAE/C,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BjB,UAAU,CAACS,YAAD,EAAeD,gBAAf,CAA9C,CAF+C,CAI/C;;EAEA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE;MAACQ,UAAD;MAAaC;IAAb,CAA/B;IAAA,UACGF;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAXM;;GAAMD,e;;KAAAA,e;AAab,eAAeA,eAAf;AACA,OAAO,MAAMI,gBAAgB,GAAG;EAAA;;EAAA,OAAMnB,UAAU,CAACE,aAAD,CAAhB;AAAA,CAAzB;;IAAMiB,gB"},"metadata":{},"sourceType":"module"}