{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Documents\\\\DH\\\\Bimestre_3\\\\Front3\\\\fe3-final\\\\fe3-final\\\\src\\\\Components\\\\Card.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport doctor from \"../images/doctor.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Card = _ref => {\n  _s();\n\n  let {\n    name,\n    username,\n    id\n  } = _ref;\n  const [dentistState, setDentistState] = useState({});\n  const [isFavorited, setIsFavorited] = useState(false);\n  const navegar = useNavigate();\n  const url = 'https://jsonplaceholder.typicode.com/users/' + id;\n  useEffect(() => {\n    fetch(url).then(res => res.json()).then(data => setDentistState(data));\n  }, []);\n\n  const addFav = () => {\n    setIsFavorited(prev => !prev);\n    const favs = JSON.parse(localStorage.getItem('favs')) || [];\n    const existingFav = favs.findIndex(fav => fav.id === dentistState.id);\n\n    if (existingFav === -1) {\n      const newFavs = [...favs, dentistState];\n      localStorage.setItem('favs', JSON.stringify(newFavs));\n    } else {\n      const newFavs = favs.filter(fav => fav.id !== dentistState.id);\n      localStorage.setItem('favs', JSON.stringify(newFavs));\n    }\n  };\n\n  useEffect(() => {\n    const favs = JSON.parse(localStorage.getItem('favs')) || [];\n    const existingFav = favs.findIndex(fav => fav.id === id);\n\n    if (existingFav !== -1) {\n      setIsFavorited(true);\n    }\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      onClick: () => navegar(`/details/${id}`),\n      children: [isFavorited && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"\\u2605\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"imagen\",\n        src: doctor,\n        alt: \"doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addFav,\n      className: \"favButton\",\n      children: isFavorited ? 'Remove from Favorites' : 'Add to Favorites'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Card, \"fq9s6Q1X6FDrlkjaQduzVVlrv1I=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","doctor","Card","name","username","id","dentistState","setDentistState","isFavorited","setIsFavorited","navegar","url","fetch","then","res","json","data","addFav","prev","favs","JSON","parse","localStorage","getItem","existingFav","findIndex","fav","newFavs","setItem","stringify","filter","color"],"sources":["C:/Users/Lenovo/Documents/DH/Bimestre_3/Front3/fe3-final/fe3-final/src/Components/Card.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport doctor from \"../images/doctor.jpg\";\r\n\r\nconst Card = ({ name, username, id }) => {\r\n  const [dentistState, setDentistState] = useState({});\r\n  const [isFavorited, setIsFavorited] = useState(false);\r\n  const navegar = useNavigate()\r\n\r\n  const url = 'https://jsonplaceholder.typicode.com/users/' + id;\r\n\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(data => setDentistState(data))\r\n  }, [])\r\n\r\n  const addFav = () => {\r\n    setIsFavorited(prev => !prev);\r\n    const favs = JSON.parse(localStorage.getItem('favs')) || [];\r\n\r\n    const existingFav = favs.findIndex(fav => fav.id === dentistState.id);\r\n    \r\n    if (existingFav === -1) {\r\n      const newFavs = [...favs, dentistState];\r\n      localStorage.setItem('favs', JSON.stringify(newFavs));\r\n    } else {\r\n      const newFavs = favs.filter((fav) => fav.id !== dentistState.id);\r\n      localStorage.setItem('favs', JSON.stringify(newFavs));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const favs = JSON.parse(localStorage.getItem('favs')) || [];\r\n    const existingFav = favs.findIndex(fav => fav.id === id);\r\n    if (existingFav !== -1) {\r\n      setIsFavorited(true);\r\n    }\r\n  }, [id])\r\n\r\n  return (\r\n    <div  className=\"card\" >\r\n    <div  className=\"card\" key={id} onClick={()=> navegar(`/details/${id}`)}>\r\n      {isFavorited && <p style={{color: \"red\"}}>â˜…</p>}\r\n      <img className=\"imagen\" src={doctor} alt=\"doctor\"  />\r\n      <h4>{name}</h4>\r\n      <h4>{username}</h4>\r\n      <h4>{id}</h4>\r\n    </div>\r\n    <button onClick={addFav} className=\"favButton\">\r\n        {isFavorited ? 'Remove from Favorites' : 'Add to Favorites'}\r\n      </button>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;"],"mappings":"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"},"metadata":{},"sourceType":"module"}