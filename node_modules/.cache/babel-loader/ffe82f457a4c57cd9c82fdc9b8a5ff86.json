{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Documents\\\\DH\\\\Bimestre_3\\\\Front3\\\\fe3-final\\\\fe3-final\\\\src\\\\Components\\\\Card.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport doctor from \"../images/doctor.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Card = _ref => {\n  _s();\n\n  let {\n    name,\n    username,\n    id\n  } = _ref;\n  const [dentistState, setDentistState] = useState({});\n  const [isFavorited, setIsFavorited] = useState(false);\n  const url = 'https://jsonplaceholder.typicode.com/users/' + id;\n  useEffect(() => {\n    fetch(url).then(res => res.json()).then(data => setDentistState(data));\n  }, []);\n\n  const addFav = () => {\n    setIsFavorited(prev => !prev);\n    const favs = JSON.parse(localStorage.getItem('favs')) || [];\n    const existingFav = favs.findIndex(fav => fav.id === dentistState.id);\n\n    if (existingFav === -1) {\n      const newFavs = [...favs, dentistState];\n      localStorage.setItem('favs', JSON.stringify(newFavs));\n    } else {\n      const newFavs = favs.filter(fav => fav.id !== dentistState.id);\n      localStorage.setItem('favs', JSON.stringify(newFavs));\n    }\n  };\n\n  useEffect(() => {\n    const favs = JSON.parse(localStorage.getItem('favs')) || [];\n    const existingFav = favs.findIndex(fav => fav.id === id);\n\n    if (existingFav !== -1) {\n      setIsFavorited(true);\n    }\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [isFavorited && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"\\u2605\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        width: \"180px\"\n      },\n      src: doctor,\n      alt: \"doctor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/details/${id}`,\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          color: 'red'\n        },\n        children: \"Detail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addFav,\n      className: \"favButton\",\n      children: isFavorited ? 'Remove from Favorites' : 'Add to Favorites'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Card, \"9c+PDmLID32elKvRwHXCz2T3Sa4=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useEffect","useState","Link","doctor","Card","name","username","id","dentistState","setDentistState","isFavorited","setIsFavorited","url","fetch","then","res","json","data","addFav","prev","favs","JSON","parse","localStorage","getItem","existingFav","findIndex","fav","newFavs","setItem","stringify","filter","color","width"],"sources":["C:/Users/Lenovo/Documents/DH/Bimestre_3/Front3/fe3-final/fe3-final/src/Components/Card.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport doctor from \"../images/doctor.jpg\";\r\n\r\nconst Card = ({ name, username, id }) => {\r\n  const [dentistState, setDentistState] = useState({});\r\n  const [isFavorited, setIsFavorited] = useState(false);\r\n\r\n  const url = 'https://jsonplaceholder.typicode.com/users/' + id;\r\n\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(data => setDentistState(data))\r\n  }, [])\r\n\r\n  const addFav = () => {\r\n    setIsFavorited(prev => !prev);\r\n    const favs = JSON.parse(localStorage.getItem('favs')) || [];\r\n\r\n    const existingFav = favs.findIndex(fav => fav.id === dentistState.id);\r\n    \r\n    if (existingFav === -1) {\r\n      const newFavs = [...favs, dentistState];\r\n      localStorage.setItem('favs', JSON.stringify(newFavs));\r\n    } else {\r\n      const newFavs = favs.filter((fav) => fav.id !== dentistState.id);\r\n      localStorage.setItem('favs', JSON.stringify(newFavs));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const favs = JSON.parse(localStorage.getItem('favs')) || [];\r\n    const existingFav = favs.findIndex(fav => fav.id === id);\r\n    if (existingFav !== -1) {\r\n      setIsFavorited(true);\r\n    }\r\n  }, [id])\r\n\r\n  return (\r\n    <div className=\"card\" key={id}>\r\n      {isFavorited && <p style={{color: \"red\"}}>â˜…</p>}\r\n      <img style={{width: \"180px\"}} src={doctor} alt=\"doctor\" />\r\n      <h4>{name}</h4>\r\n      <h4>{username}</h4>\r\n      <h4>{id}</h4>\r\n      <Link to={`/details/${id}`}>\r\n        <h4 style={{ color: 'red' }}>Detail</h4>\r\n      </Link>\r\n      <button onClick={addFav} className=\"favButton\">\r\n        {isFavorited ? 'Remove from Favorites' : 'Add to Favorites'}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;"],"mappings":"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"},"metadata":{},"sourceType":"module"}