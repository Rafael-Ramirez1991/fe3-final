{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Documents\\\\DH\\\\Bimestre_3\\\\Front3\\\\fe3-final\\\\fe3-final\\\\src\\\\Components\\\\Card.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport foto from '../images/doctor.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Card = _ref => {\n  _s();\n\n  let {\n    name,\n    username,\n    id\n  } = _ref;\n  const [visible, setVisible] = useState(false);\n  const [dentistState, setDentistState] = useState({});\n  const [navegar, setNavegar] = useNavigate();\n  const url = 'https://jsonplaceholder.typicode.com/users/' + id;\n  useEffect(() => {\n    fetch(url).then(res => res.json()).then(data => setDentistState(data));\n  }, []);\n\n  const addFav = () => {\n    setVisible(true);\n    let favs = JSON.parse(localStorage.getItem('favs')) || []; // Verificar si el objeto ya existe en el array de favoritos\n\n    const existingFav = favs.find(fav => fav.id === dentistState.id);\n\n    if (!existingFav) {\n      const newFavs = [...favs, dentistState];\n      localStorage.setItem('favs', JSON.stringify(newFavs));\n    } else {\n      // El objeto ya existe en favoritos, eliminarlo del array y guardar el nuevo array en localStorage\n      const newFavs = favs.find(fav => fav.id !== dentistState.id);\n      setVisible(false);\n      localStorage.setItem('favs', JSON.stringify(newFavs));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    onClick: () => navegar(''),\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: visible ? '❤️' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: foto,\n      alt: \"doctor\",\n      style: {\n        width: '250px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addFav,\n      className: \"botonFav\",\n      children: \"Add fav \\u2B50\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Card, \"FNx/N8gA/24D83DXWcGgHzGFBic=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Card;\nexport default Card; // } )}\n\n{\n  /* En cada card deberan mostrar en name - username y el id */\n}\n{\n  /* No debes olvidar que la Card a su vez servira como Link hacia la pagina de detalle */\n}\n{\n  /* Ademas deberan integrar la logica para guardar cada Card en el localStorage */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","foto","Card","name","username","id","visible","setVisible","dentistState","setDentistState","navegar","setNavegar","url","fetch","then","res","json","data","addFav","favs","JSON","parse","localStorage","getItem","existingFav","find","fav","newFavs","setItem","stringify","width"],"sources":["C:/Users/Lenovo/Documents/DH/Bimestre_3/Front3/fe3-final/fe3-final/src/Components/Card.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport foto from '../images/doctor.jpg'\r\n\r\n\r\n\r\nconst Card = ({ name, username, id }) => {\r\n\r\n  const [visible, setVisible] = useState(false)\r\n  const [dentistState, setDentistState] = useState({});\r\n  const [navegar, setNavegar] = useNavigate()\r\n  const url = 'https://jsonplaceholder.typicode.com/users/' + id;\r\n\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(data => setDentistState(data))\r\n  }, [])\r\n\r\n  const addFav = () => {\r\n    \r\n    setVisible(true)\r\n    let favs = JSON.parse(localStorage.getItem('favs')) || []; \r\n    // Verificar si el objeto ya existe en el array de favoritos\r\n    const existingFav = favs.find(fav => fav.id === dentistState.id);\r\n    if (!existingFav) {\r\n    const newFavs = [...favs, dentistState];\r\n    localStorage.setItem('favs', JSON.stringify(newFavs));\r\n    \r\n   \r\n  }else{\r\n    \r\n    // El objeto ya existe en favoritos, eliminarlo del array y guardar el nuevo array en localStorage\r\n    const newFavs = favs.find((fav) => fav.id !== dentistState.id);\r\n    setVisible(false)\r\n    localStorage.setItem('favs', JSON.stringify(newFavs));\r\n    \r\n  }\r\n  }\r\n\r\n\r\n\r\n    \r\n\r\n  return(\r\n\r\n    <div className=\"card\" key={id} onClick={()=> navegar('')}>\r\n    <p>{visible ? '❤️' : ''}</p>\r\n    <img src={foto} alt=\"doctor\" style={{width: '250px'}}/>\r\n    <h4 >{name}</h4>\r\n    <h4 >{username}</h4>\r\n    <h4>{id}</h4>\r\n    \r\n    \r\n\r\n\r\n    <button onClick={addFav} className=\"botonFav\">\r\n    Add fav ⭐\r\n        </button>\r\n    </div>\r\n \r\n  )\r\n}\r\nexport default Card;\r\n  \r\n\r\n// } )}\r\n\r\n  \r\n \r\n    \r\n        {/* En cada card deberan mostrar en name - username y el id */}\r\n\r\n        {/* No debes olvidar que la Card a su vez servira como Link hacia la pagina de detalle */}\r\n\r\n        {/* Ademas deberan integrar la logica para guardar cada Card en el localStorage */}\r\n\r\n \r\n\r\n\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;;AAIA,MAAMC,IAAI,GAAG,QAA4B;EAAA;;EAAA,IAA3B;IAAEC,IAAF;IAAQC,QAAR;IAAkBC;EAAlB,CAA2B;EAEvC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBX,WAAW,EAAzC;EACA,MAAMY,GAAG,GAAG,gDAAgDP,EAA5D;EAEAR,SAAS,CAAC,MAAM;IACdgB,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAIR,eAAe,CAACQ,IAAD,CAF/B;EAGD,CAJQ,EAIN,EAJM,CAAT;;EAMA,MAAMC,MAAM,GAAG,MAAM;IAEnBX,UAAU,CAAC,IAAD,CAAV;IACA,IAAIY,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,KAA4C,EAAvD,CAHmB,CAInB;;IACA,MAAMC,WAAW,GAAGL,IAAI,CAACM,IAAL,CAAUC,GAAG,IAAIA,GAAG,CAACrB,EAAJ,KAAWG,YAAY,CAACH,EAAzC,CAApB;;IACA,IAAI,CAACmB,WAAL,EAAkB;MAClB,MAAMG,OAAO,GAAG,CAAC,GAAGR,IAAJ,EAAUX,YAAV,CAAhB;MACAc,YAAY,CAACM,OAAb,CAAqB,MAArB,EAA6BR,IAAI,CAACS,SAAL,CAAeF,OAAf,CAA7B;IAGD,CALC,MAKG;MAEH;MACA,MAAMA,OAAO,GAAGR,IAAI,CAACM,IAAL,CAAWC,GAAD,IAASA,GAAG,CAACrB,EAAJ,KAAWG,YAAY,CAACH,EAA3C,CAAhB;MACAE,UAAU,CAAC,KAAD,CAAV;MACAe,YAAY,CAACM,OAAb,CAAqB,MAArB,EAA6BR,IAAI,CAACS,SAAL,CAAeF,OAAf,CAA7B;IAED;EACA,CAnBD;;EAyBA,oBAEE;IAAK,SAAS,EAAC,MAAf;IAA+B,OAAO,EAAE,MAAKjB,OAAO,CAAC,EAAD,CAApD;IAAA,wBACA;MAAA,UAAIJ,OAAO,GAAG,IAAH,GAAU;IAArB;MAAA;MAAA;MAAA;IAAA,QADA,eAEA;MAAK,GAAG,EAAEL,IAAV;MAAgB,GAAG,EAAC,QAApB;MAA6B,KAAK,EAAE;QAAC6B,KAAK,EAAE;MAAR;IAApC;MAAA;MAAA;MAAA;IAAA,QAFA,eAGA;MAAA,UAAM3B;IAAN;MAAA;MAAA;MAAA;IAAA,QAHA,eAIA;MAAA,UAAMC;IAAN;MAAA;MAAA;MAAA;IAAA,QAJA,eAKA;MAAA,UAAKC;IAAL;MAAA;MAAA;MAAA;IAAA,QALA,eAUA;MAAQ,OAAO,EAAEa,MAAjB;MAAyB,SAAS,EAAC,UAAnC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAVA;EAAA,GAA2Bb,EAA3B;IAAA;IAAA;IAAA;EAAA,QAFF;AAkBD,CAxDD;;GAAMH,I;UAI0BF,W;;;KAJ1BE,I;AAyDN,eAAeA,IAAf,C,CAGA;;AAKQ;EAAC;AAA8D;AAE/D;EAAC;AAAyF;AAE1F;EAAC;AAAkF"},"metadata":{},"sourceType":"module"}