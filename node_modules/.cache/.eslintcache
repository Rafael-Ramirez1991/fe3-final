[{"C:\\Users\\Lenovo\\Documents\\DH\\Bimestre_3\\Front3\\fe3-final\\fe3-final\\src\\index.jsx":"1","C:\\Users\\Lenovo\\Documents\\DH\\Bimestre_3\\Front3\\fe3-final\\fe3-final\\src\\App.jsx":"2","C:\\Users\\Lenovo\\Documents\\DH\\Bimestre_3\\Front3\\fe3-final\\fe3-final\\src\\Components\\Navbar.jsx":"3","C:\\Users\\Lenovo\\Documents\\DH\\Bimestre_3\\Front3\\fe3-final\\fe3-final\\src\\Components\\Footer.jsx":"4","C:\\Users\\Lenovo\\Documents\\DH\\Bimestre_3\\Front3\\fe3-final\\fe3-final\\src\\routes.js":"5","C:\\Users\\Lenovo\\Documents\\DH\\Bimestre_3\\Front3\\fe3-final\\fe3-final\\src\\Routes\\Home.jsx":"6","C:\\Users\\Lenovo\\Documents\\DH\\Bimestre_3\\Front3\\fe3-final\\fe3-final\\src\\Components\\Card.jsx":"7","C:\\Users\\Lenovo\\Documents\\DH\\Bimestre_3\\Front3\\fe3-final\\fe3-final\\src\\Routes\\Detail.jsx":"8","C:\\Users\\Lenovo\\Documents\\DH\\Bimestre_3\\Front3\\fe3-final\\fe3-final\\src\\Routes\\Contact.jsx":"9","C:\\Users\\Lenovo\\Documents\\DH\\Bimestre_3\\Front3\\fe3-final\\fe3-final\\src\\Components\\Form.jsx":"10","C:\\Users\\Lenovo\\Documents\\DH\\Bimestre_3\\Front3\\fe3-final\\fe3-final\\src\\Routes\\Favs.jsx":"11","C:\\Users\\Lenovo\\Documents\\DH\\Bimestre_3\\Front3\\fe3-final\\fe3-final\\src\\Components\\utils\\global.context.jsx":"12"},{"size":438,"mtime":1680918141216,"results":"13","hashOfConfig":"14"},{"size":1084,"mtime":1680965203755,"results":"15","hashOfConfig":"14"},{"size":1362,"mtime":1680962537008,"results":"16","hashOfConfig":"14"},{"size":740,"mtime":1680908134876,"results":"17","hashOfConfig":"14"},{"size":118,"mtime":1680827895686,"results":"18","hashOfConfig":"14"},{"size":684,"mtime":1680904459179,"results":"19","hashOfConfig":"14"},{"size":1843,"mtime":1680908057979,"results":"20","hashOfConfig":"14"},{"size":1387,"mtime":1680827895681,"results":"21","hashOfConfig":"14"},{"size":425,"mtime":1680923447624,"results":"22","hashOfConfig":"14"},{"size":1126,"mtime":1680924475941,"results":"23","hashOfConfig":"14"},{"size":1423,"mtime":1680962639247,"results":"24","hashOfConfig":"14"},{"size":1838,"mtime":1680900863532,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ae3oo3",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},"C:\\Users\\Lenovo\\Documents\\DH\\Bimestre_3\\Front3\\fe3-final\\fe3-final\\src\\index.jsx",[],[],"C:\\Users\\Lenovo\\Documents\\DH\\Bimestre_3\\Front3\\fe3-final\\fe3-final\\src\\App.jsx",[],[],"C:\\Users\\Lenovo\\Documents\\DH\\Bimestre_3\\Front3\\fe3-final\\fe3-final\\src\\Components\\Navbar.jsx",["68"],[],"\r\nimport { Link } from 'react-router-dom'\r\nimport { routes } from '../routes'\r\nimport { useContextGlobal } from './utils/global.context'\r\nimport { useState } from 'react'\r\n\r\n\r\n\r\n\r\n//Este componente debera ser estilado como \"dark\" o \"light\" dependiendo del theme del Context\r\n\r\nconst Navbar = () => {\r\n\r\n  const condicionalFav = localStorage.getItem(\"favs\")\r\n\r\n  const [showFav, setShowFav] = useState( condicionalFav )\r\n\r\n  const {themeState, themeDispatch } = useContextGlobal()\r\n\r\n  // console.log(themeDispatch)\r\n  // console.log(themeState)\r\n\r\n  const switchTheme = () => {\r\n    if(themeState.theme){\r\n      themeDispatch({type:'LIGHT'})\r\n    }else{\r\n      themeDispatch({type:'DARK'})\r\n    }\r\n  }\r\n  \r\n\r\n  return (\r\n    <nav>\r\n      <Link style={{color: themeState.color}} to={routes.home}><h3>Home</h3></Link>\r\n      {/* <Link style={{color: themeState.color}} to={routes.details}><h3>Detail</h3></Link> */}\r\n      <Link style={{color: themeState.color}} to={routes.contact}><h3>Contact</h3></Link>\r\n      {showFav && <Link style={{color: themeState.color}} to={routes.favs}><h3>Favs</h3></Link>}\r\n      {/* Deberan implementar ademas la logica para cambiar de Theme con el button */}\r\n      \r\n      <button className='botonTheme' onClick={switchTheme}>{themeState.theme ? '‚òÄÔ∏è'  : 'üåò'}</button>\r\n      \r\n    </nav>\r\n\r\n  )\r\n}\r\n\r\nexport default Navbar","C:\\Users\\Lenovo\\Documents\\DH\\Bimestre_3\\Front3\\fe3-final\\fe3-final\\src\\Components\\Footer.jsx",[],[],"C:\\Users\\Lenovo\\Documents\\DH\\Bimestre_3\\Front3\\fe3-final\\fe3-final\\src\\routes.js",[],[],[],"C:\\Users\\Lenovo\\Documents\\DH\\Bimestre_3\\Front3\\fe3-final\\fe3-final\\src\\Routes\\Home.jsx",["69"],[],"\r\nimport Card from '../Components/Card'\r\nimport { useContextGlobal } from '../Components/utils/global.context'\r\n\r\n\r\n//Este componente debera ser estilado como \"dark\" o \"light\" dependiendo del theme del Context\r\n\r\nconst Home = () => {\r\n\r\n\r\n  const { dentists } = useContextGlobal() \r\n  console.log(dentists)\r\n\r\n  return (\r\n    \r\n    <div>\r\n    <main className=\"\" >\r\n      <h1></h1>\r\n      <div className='card-grid'>{/* Aqui deberias renderizar las cards */}\r\n        {dentists.map((dentis => <Card key={dentis.id} name={dentis.name} dentis={dentis}\r\n        username={dentis.username} id={dentis.id}/>))}\r\n  \r\n\r\n</div>\r\n        \r\n    </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home","C:\\Users\\Lenovo\\Documents\\DH\\Bimestre_3\\Front3\\fe3-final\\fe3-final\\src\\Components\\Card.jsx",["70"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport doctor from \"../images/doctor.jpg\";\r\n\r\nconst Card = ({ name, username, id }) => {\r\n  const [dentistState, setDentistState] = useState({});\r\n  const [isFavorited, setIsFavorited] = useState(false);\r\n  const navegar = useNavigate()\r\n\r\n  const url = 'https://jsonplaceholder.typicode.com/users/' + id;\r\n\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(data => setDentistState(data))\r\n  }, [])\r\n\r\n  const addFav = () => {\r\n    setIsFavorited(prev => !prev);\r\n    const favs = JSON.parse(localStorage.getItem('favs')) || [];\r\n\r\n    const existingFav = favs.findIndex(fav => fav.id === dentistState.id);\r\n    \r\n    if (existingFav === -1) {\r\n      const newFavs = [...favs, dentistState];\r\n      localStorage.setItem('favs', JSON.stringify(newFavs));\r\n    } else {\r\n      const newFavs = favs.filter((fav) => fav.id !== dentistState.id);\r\n      localStorage.setItem('favs', JSON.stringify(newFavs));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const favs = JSON.parse(localStorage.getItem('favs')) || [];\r\n    const existingFav = favs.findIndex(fav => fav.id === id);\r\n    if (existingFav !== -1) {\r\n      setIsFavorited(true);\r\n    }\r\n  }, [id])\r\n  const remover  = 'Remove from Favorites'\r\n  const agg = 'Add to Favorites'\r\n\r\n  return (\r\n    <div  className=\"card\" >\r\n    <div  className=\"intCard\" key={id} onClick={()=> navegar(`/details/${id}`)}>\r\n      {isFavorited && <p className=\"fav\" >‚òÖ</p>}\r\n      <img className=\"imagen\" src={doctor} alt=\"doctor\"  />\r\n      <h4>{name}</h4>\r\n      <h4>{username}</h4>\r\n      <h4>{id}</h4>\r\n    </div> \r\n    <button onClick={addFav} className=\"favButton\">\r\n        {isFavorited ? remover  :  agg }\r\n      </button>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","C:\\Users\\Lenovo\\Documents\\DH\\Bimestre_3\\Front3\\fe3-final\\fe3-final\\src\\Routes\\Detail.jsx",["71"],[],"// import  { useState } from 'react'\r\nimport { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n// import axios from \"axios\"\r\n// import { Link } from 'react-router-dom'\r\n// import { routes } from '../routes'\r\n\r\n\r\n\r\n\r\n//Este componente debera ser estilado como \"dark\" o \"light\" dependiendo del theme del Context\r\n\r\nconst Detail = () => {\r\n\r\n  const [detalle, setDetalle] = useState({})\r\n\r\n  let { id } = useParams() \r\n  console.log(id)\r\n\r\nconst url = `https://jsonplaceholder.typicode.com/users/${id}`\r\n\r\n\r\nconsole.log(url)\r\n\r\nuseEffect(()=>{\r\n\r\n  fetch(url)\r\n  .then(response => response.json())\r\n  .then(data => setDetalle(data))\r\n  \r\n\r\n\r\n}, [])\r\n\r\n  // Consumiendo el parametro dinamico de la URL deberan hacer un fetch a un user en especifico\r\n\r\n  return (\r\n    <div className='detalles'>\r\n    <table style={{width: '100%'}}>\r\n    <tr  >\r\n      <td >Name</td>\r\n      <td >Email</td>\r\n      <td >Phone</td>\r\n      <td >Website</td>\r\n    </tr>\r\n    <tr>\r\n      <td>{detalle.name}</td>\r\n      <td>{detalle.email}</td>\r\n      <td>{detalle.phone}</td>\r\n      <td>{detalle.website}</td>\r\n    </tr>\r\n    </table>\r\n\r\n      \r\n\r\n    \r\n      {/* aqui deberan renderizar la informacion en detalle de un user en especifico */}\r\n      {/* Deberan mostrar el name - email - phone - website por cada user en especifico */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Detail","C:\\Users\\Lenovo\\Documents\\DH\\Bimestre_3\\Front3\\fe3-final\\fe3-final\\src\\Routes\\Contact.jsx",[],[],"C:\\Users\\Lenovo\\Documents\\DH\\Bimestre_3\\Front3\\fe3-final\\fe3-final\\src\\Components\\Form.jsx",[],[],"C:\\Users\\Lenovo\\Documents\\DH\\Bimestre_3\\Front3\\fe3-final\\fe3-final\\src\\Routes\\Favs.jsx",[],[],"C:\\Users\\Lenovo\\Documents\\DH\\Bimestre_3\\Front3\\fe3-final\\fe3-final\\src\\Components\\utils\\global.context.jsx",["72","73"],[],"import axios from \"axios\";\r\nimport { createContext, useContext, useEffect, useReducer, useState } from \"react\";\r\n\r\nexport const ContextGlobal = createContext();\r\n\r\n\r\nconst themes = {\r\n  dark: {\r\n      theme: true,\r\n      bgColor: '#333333',\r\n      color: 'white'\r\n  },\r\n  light: {\r\n      theme: false,\r\n      bgColor: 'white',\r\n      color: 'black'\r\n  }\r\n}\r\n\r\n// const initialState = []\r\nconst intialThemeState = themes.light\r\n\r\n\r\n// export const initialState = \r\n// {\r\n//   theme: \"\",\r\n//   data: []\r\n//   }\r\n\r\n\r\n\r\nconst themeReducer = (state,action) => {\r\n    switch (action.type){\r\n      case 'DARK': \r\n        return themes.dark\r\n      case 'LIGHT':\r\n          return themes.light\r\n      default: \r\n          throw new Error(\"pud\")\r\n\r\n    }\r\n}\r\n\r\nconst url = 'https://jsonplaceholder.typicode.com/users/'\r\n\r\nconst initialApiState = []\r\nconst apiReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'GET_DENT':\r\n      return action.payload\r\n    default:\r\n      throw new Error()\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n\r\n  const [dentists, dentistsDispatch] = useReducer(apiReducer, initialApiState)\r\n\r\n  // const { id } = useParams ()\r\n\r\nuseEffect(()=>{\r\n  fetch(url)\r\n  .then((response) => response.json())\r\n  .then((data) => dentistsDispatch({type: 'GET_DENT', payload: data }));\r\n\r\n  // axios.get(url)\r\n  // .then(res => setDentists(res.data))\r\n\r\n}, [])\r\n\r\n  const [themeState, themeDispatch] = useReducer(themeReducer, intialThemeState)\r\n\r\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\r\n\r\n  return (\r\n    <ContextGlobal.Provider value={{themeState, themeDispatch, themeReducer, dentists}}>\r\n      {children}\r\n    </ContextGlobal.Provider>\r\n  );\r\n};\r\n\r\nexport default ContextProvider\r\nexport const useContextGlobal = () => useContext(ContextGlobal)\r\n",{"ruleId":"74","severity":1,"message":"75","line":16,"column":19,"nodeType":"76","messageId":"77","endLine":16,"endColumn":29},{"ruleId":"78","severity":1,"message":"79","line":18,"column":7,"nodeType":"80","endLine":18,"endColumn":11},{"ruleId":"81","severity":1,"message":"82","line":16,"column":6,"nodeType":"83","endLine":16,"endColumn":8,"suggestions":"84"},{"ruleId":"81","severity":1,"message":"82","line":33,"column":4,"nodeType":"83","endLine":33,"endColumn":6,"suggestions":"85"},{"ruleId":"74","severity":1,"message":"86","line":1,"column":8,"nodeType":"76","messageId":"77","endLine":1,"endColumn":13},{"ruleId":"74","severity":1,"message":"87","line":2,"column":60,"nodeType":"76","messageId":"77","endLine":2,"endColumn":68},"no-unused-vars","'setShowFav' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["88"],["89"],"'axios' is defined but never used.","'useState' is defined but never used.",{"desc":"90","fix":"91"},{"desc":"90","fix":"92"},"Update the dependencies array to be: [url]",{"range":"93","text":"94"},{"range":"95","text":"94"},[529,531],"[url]",[676,678]]